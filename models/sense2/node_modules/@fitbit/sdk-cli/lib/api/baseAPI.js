"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.apiFetch = exports.decodeJSON = exports.assertAPIResponseOK = void 0;
const tslib_1 = require("tslib");
const t = tslib_1.__importStar(require("io-ts"));
const pipeable_1 = require("fp-ts/lib/pipeable");
const Either_1 = require("fp-ts/lib/Either");
const jsonrpc_ts_1 = require("@fitbit/jsonrpc-ts");
const auth = tslib_1.__importStar(require("../auth"));
const environment_1 = tslib_1.__importDefault(require("../auth/environment"));
const fetch_1 = tslib_1.__importStar(require("../fetch"));
const fetchUtil_1 = require("../util/fetchUtil");
const APIErrorResponse = t.type({
    errors: t.array(t.type({
        message: t.string,
    })),
}, 'Hosts403Response');
exports.assertAPIResponseOK = (0, fetchUtil_1.okOrElse)((response) => {
    return (0, fetchUtil_1.assertJSON)()(response)
        .catch(() => Promise.reject(new Error(`Fetch of ${response.url} returned status ${response.status} ${response.statusText}`)))
        .then((resObj) => Promise.reject(new Error((0, pipeable_1.pipe)(APIErrorResponse.decode(resObj), (0, Either_1.fold)(() => `fetch of ${response.url} returned status ${response.status} ${response.statusText} with body: ${JSON.stringify(resObj, undefined, 2)}`, ({ errors }) => errors.map((err) => err.message).join('\n'))))));
});
const decodeJSON = (endpointType) => (response) => (0, exports.assertAPIResponseOK)(response).then((0, fetchUtil_1.assertJSON)()).then((0, jsonrpc_ts_1.decode)(endpointType));
exports.decodeJSON = decodeJSON;
async function apiFetch(path, init = {}) {
    const authToken = await auth.getAccessToken();
    if (!authToken) {
        throw new Error(`Fetch of ${path} failed: no stored auth token`);
    }
    const headers = new fetch_1.Headers(init.headers || {});
    headers.set('authorization', `Bearer ${authToken}`);
    const mergedInit = Object.assign(Object.assign({ cache: 'no-store' }, init), { headers });
    return (0, fetch_1.default)(`${(0, environment_1.default)().config.apiUrl}/${path}`, mergedInit);
}
exports.apiFetch = apiFetch;
//# sourceMappingURL=baseAPI.js.map