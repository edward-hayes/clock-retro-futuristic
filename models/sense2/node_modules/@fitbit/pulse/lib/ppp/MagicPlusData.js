"use strict";
/**
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var MagicPlusData = /** @class */ (function () {
    function MagicPlusData(magicNumber, data) {
        this.magicNumber = magicNumber;
        this.data = data;
    }
    MagicPlusData.parse = function (buf) {
        if (buf.byteLength < MagicPlusData.headerSize) {
            throw new Error('Magic number less than minimum possible byte length');
        }
        var offset = 0;
        var magicNumber = buf.readUInt32BE(offset);
        offset += MagicPlusData.headerSize;
        var data = buf.slice(offset);
        return new MagicPlusData(magicNumber, data);
    };
    MagicPlusData.build = function (magicNumber, data) {
        if (data === void 0) { data = Buffer.alloc(0); }
        var buf = Buffer.alloc(data.byteLength + MagicPlusData.headerSize);
        var offset = 0;
        buf.writeUInt32BE(magicNumber, offset);
        offset += MagicPlusData.headerSize;
        data.copy(buf, offset);
        return buf;
    };
    MagicPlusData.headerSize = 4;
    return MagicPlusData;
}());
exports.default = MagicPlusData;
//# sourceMappingURL=MagicPlusData.js.map