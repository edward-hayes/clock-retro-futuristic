"use strict";
/**
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var events_1 = (0, tslib_1.__importDefault)(require("events"));
/*
  A socket for sending and receiving packets over a single port
  of a PULSE transport.
*/
var Socket = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(Socket, _super);
    function Socket(transport, port) {
        var _this = _super.call(this) || this;
        _this.transport = transport;
        _this.port = port;
        _this.closed = false;
        return _this;
    }
    Socket.prototype.onReceive = function (packet) {
        this.emit('data', packet);
    };
    Socket.prototype.send = function (packet) {
        if (this.closed)
            throw new Error('I/O operation on closed socket');
        this.transport.send(this.port, packet);
    };
    Socket.prototype.close = function () {
        if (this.closed)
            return;
        this.closed = true;
        this.emit('close');
        this.transport.unregisterSocket(this.port);
    };
    Object.defineProperty(Socket.prototype, "mtu", {
        get: function () {
            return this.transport.mtu;
        },
        enumerable: false,
        configurable: true
    });
    return Socket;
}(events_1.default));
exports.default = Socket;
//# sourceMappingURL=Socket.js.map