"use strict";
/**
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var PCMPPacket = /** @class */ (function () {
    function PCMPPacket(code, information) {
        this.code = code;
        this.information = information;
    }
    PCMPPacket.parse = function (packet) {
        if (packet.byteLength < this.headerSize) {
            throw new Error('Packet truncated or corrupt');
        }
        var offset = 0;
        var code = packet.readUInt8(offset++);
        var information = packet.slice(offset);
        return new PCMPPacket(code, information);
    };
    PCMPPacket.build = function (code, information) {
        if (information === void 0) { information = Buffer.alloc(0); }
        var buf = Buffer.alloc(information.byteLength + PCMPPacket.headerSize);
        var offset = 0;
        buf.writeUInt8(code, offset++);
        information.copy(buf, offset);
        return buf;
    };
    PCMPPacket.headerSize = 1;
    return PCMPPacket;
}());
exports.default = PCMPPacket;
//# sourceMappingURL=PCMPPacket.js.map