/**
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/// <reference types="node" />
import EventEmitter from 'events';
import Transport from './transports';
export interface SocketLike extends EventEmitter {
    closed: boolean;
    readonly mtu: number;
    onReceive(packet: Buffer): void;
    send(packet: Buffer): void;
    close(): void;
}
export default class Socket extends EventEmitter implements SocketLike {
    private transport;
    private port;
    closed: boolean;
    constructor(transport: Transport, port: number);
    onReceive(packet: Buffer): void;
    send(packet: Buffer): void;
    close(): void;
    get mtu(): number;
}
